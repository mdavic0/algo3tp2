@startuml
skinparam classAttributeIconSize 0
skinparam backgroundColor White
skinparam RoundCorner 10
skinparam Shadowing true
skinparam ArrowColor DarkBlue
skinparam SequenceLifeLineBorderColor DarkBlue
skinparam SequenceLoopBackgroundColor DarkBlue

skinparam state {
    ArrowColor DarkBlue
    BackgroundColor LightBlue
    BorderColor DarkBlue
}

title Diagrama de estados de Rango

scale 350 width
[*] --> Novato : subirRango(int cantidadDeArrestos)

state Novato {
    Novato --> Novato : cantidadDeArrestos < 5
    Novato --> Detective : cantidadDeArrestos = 5
}

state Detective {
    Detective --> Detective : cantidadDeArrestos < 10
    Detective --> Investigador : cantidadDeArrestos = 10
}

state Investigador{
     Investigador -->  Investigador : antidadDeArrestos < 10
    Investigador --> Sargento : cantidadDeArrestos = 20
}

state Sargento{
    Sargento --> Sargento : cantidadDeArrestos > 20
}
@enduml

@startuml
skinparam classAttributeIconSize 0
skinparam backgroundColor White
skinparam RoundCorner 10
skinparam Shadowing true
skinparam ArrowColor DarkBlue
skinparam SequenceLifeLineBorderColor DarkBlue
skinparam SequenceLoopBackgroundColor DarkBlue

skinparam state {
    EndColor Red
    ArrowColor DarkBlue
    BackgroundColor LightBlue
    BorderColor DarkBlue
}

title Diagrama de estado de Lugar Actual del Policia

scale 350 width
[*] --> Inactivo


Inactivo --> FueraDeEdificio : asignarCaso()
FueraDeEdificio --> EnEdificio : entrarA(Edificio)
EnEdificio --> FueraDeEdificio : salirDelEdificio()

}

FueraDeEdificio --> [*] : salirDelEdificio()
EnEdificio --> [*] : entrarA(Edificio)
Inactivo --> [*] : salirDelEdificio()
Inactivo --> [*] : entrarA(Edificio)

@enduml